[
    {
        "title": "Daily Coding Problem: Problem #273",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/27",
        "companies": [
            "Apple"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "A fixed point in an array is an element whose value is equal to its index. Given a sorted array of distinct elements, return a fixed point, if one exists. Otherwise, return `False`.\n\nFor example, given `[-6, 0, 2, 40]`, you should return `2`. Given `[1, 5, 7, 8]`, you should return `False`."
    },
    {
        "title": "Daily Coding Problem: Problem #266",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/26",
        "companies": [
            "Pivotal"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "A step word is formed by taking a given word, adding a letter, and anagramming the result. For example, starting with the word \"APPLE\", you can add an \"A\" and anagram to get \"APPEAL\".\n\nGiven a dictionary of words and an input word, create a function that returns all valid step words."
    },
    {
        "title": "Daily Coding Problem: Problem #233",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/25",
        "companies": [
            "Apple"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "Implement the function `fib(n)`, which returns the <code>n<sup>th</sup></code> number in the Fibonacci sequence, using only `O(1)` space."
    },
    {
        "title": "Daily Coding Problem: Problem #210",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/24",
        "companies": [
            "Apple"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "A Collatz sequence in mathematics can be defined as follows. Starting with any positive integer:\n\nif n is even, the next number in the sequence is n / 2\nif n is odd, the next number in the sequence is 3n + 1\nIt is conjectured that every such sequence eventually reaches the number `1`. Test this conjecture.\n\nBonus: What input `n <= 1000000` gives the longest sequence?"
    },
    {
        "title": "Daily Coding Problem: Problem #196",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/23",
        "companies": [
            "Apple"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "Given the root of a binary tree, find the most frequent subtree sum. The subtree sum of a node is the sum of all values under a node, including the node itself.\n\nFor example, given the following tree:\n```\n  5\n / \\\n2  -5\n```\nReturn `2` as it occurs twice: once as the left leaf, and once as the sum of `2 + 5 - 5`."
    },
    {
        "title": "Daily Coding Problem: Problem #162",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/22",
        "companies": [
            "Square"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "Given a list of words, return the shortest unique prefix of each word. For example, given the list:\n\ndog\ncat\napple\napricot\nfish\nReturn the list:\n\nd\nc\napp\napr\nf"
    },
    {
        "title": "Daily Coding Problem: Problem #148",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/21",
        "companies": [
            "Apple"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "[Gray code](https://en.wikipedia.org/wiki/Gray_code) is a binary code where each successive value differ in only one bit, as well as when wrapping around. Gray code is common in hardware so that we don't see temporary spurious values during transitions.\n\nGiven a number of bits `n`, generate a possible gray code for it.\n\nFor example, for n = `2`, one gray code would be `[00, 01, 11, 10]`."
    },
    {
        "title": "Daily Coding Problem: Problem #135",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/20",
        "companies": [
            "Apple"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "Given a binary tree, find a minimum path sum from root to a leaf.\n\nFor example, the minimum path in this tree is `[10, 5, 1, -1]`, which has sum `15`.\n```\n  10\n /  \\\n5    5\n \\     \\\n   2    1\n       /\n     -1\n```"
    },
    {
        "title": "Daily Coding Problem: Problem #93",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/19",
        "companies": [
            "Apple"
        ],
        "difficulty": "Hard",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "This problem was asked by Apple.\n\nGiven a tree, find the largest tree/subtree that is a BST.\n\nGiven a tree, return the size of the largest tree/subtree that is a BST."
    },
    {
        "title": "Daily Coding Problem: Problem #74",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/18",
        "companies": [
            "Apple"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "This problem was asked by Apple.\n\nSuppose you have a multiplication table that is N by N. That is, a 2D array where the value at the i-th row and j-th column is (i + 1) * (j + 1) (if 0-indexed) or i * j (if 1-indexed).\n\nGiven integers N and X, write a function that returns the number of times X appears as a value in an N by N multiplication table.\n\nFor example, given N = 6 and X = 12, you should return 4, since the multiplication table looks like this:\n\n| 1 | 2 | 3 | 4 | 5 | 6 |\n\n| 2 | 4 | 6 | 8 | 10 | 12 |\n\n| 3 | 6 | 9 | 12 | 15 | 18 |\n\n| 4 | 8 | 12 | 16 | 20 | 24 |\n\n| 5 | 10 | 15 | 20 | 25 | 30 |\n\n| 6 | 12 | 18 | 24 | 30 | 36 |\n\nAnd there are 4 12's in the table."
    },
    {
        "title": "Daily Coding Problem: Problem #53",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/17",
        "companies": [
            "Apple"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-03-06",
        "notes": "This problem was asked by Apple.\n\nImplement a queue using two stacks. Recall that a queue is a FIFO (first-in, first-out) data structure with the following methods: enqueue, which inserts an element into the queue, and dequeue, which removes it."
    },
    {
        "title": "Daily Coding Problem: Problem #33",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/16",
        "companies": [
            "Microsoft"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-02-25",
        "notes": "Compute the running median of a sequence of numbers. That is, given a stream of numbers, print out the median of the list so far on each new element.\n\nRecall that the median of an even-numbered list is the average of the two middle numbers.\n\nFor example, given the sequence `[2, 1, 5, 7, 2, 0, 5]`, your algorithm should print out:\n\n```\n2\n1.5\n2\n3.5\n2\n2\n2\n```"
    },
    {
        "title": "Daily Coding Problem #32",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/15",
        "companies": [
            "JaneStreet"
        ],
        "difficulty": "Hard",
        "status": "InProgress",
        "tags": [],
        "date_added": "2025-02-25",
        "notes": "Suppose you are given a table of currency exchange rates, represented as a 2D array. Determine whether there is a possible arbitrage: that is, whether there is some sequence of trades you can make, starting with some amount A of any currency, so that you can end up with some amount greater than A of that currency.\n\nThere are no transaction costs and you can trade fractional quantities."
    },
    {
        "title": "Daily Coding Problem #22",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/2",
        "companies": [
            "Microsoft"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Given a dictionary of words and a string made up of those words (no spaces), return the original sentence in a list. If there is more than one possible reconstruction, return any of them. If there is no possible reconstruction, then return null.\n\nFor example, given the set of words 'quick', 'brown', 'the', 'fox', and the string \"thequickbrownfox\", you should return ['the', 'quick', 'brown', 'fox'].\n\nGiven the set of words 'bed', 'bath', 'bedbath', 'and', 'beyond', and the string \"bedbathandbeyond\", return either ['bed', 'bath', 'and', 'beyond] or ['bedbath', 'and', 'beyond']."
    },
    {
        "title": "Longest Absolute File Path #17",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/55",
        "companies": [
            "Google"
        ],
        "difficulty": "Hard",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Suppose we represent our file system by a string in the following manner:\n\nThe string `\"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext\"` represents:\n\n```bash\ndir\n    subdir1\n    subdir2\n        file.ext\n```\n\nThe directory `dir` contains an empty sub-directory subdir1 and a sub-directory subdir2 containing a file `file.ext`.\n\nThe string `\"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\"` represents:\n\n```bash\ndir\n    subdir1\n        file1.ext\n        subsubdir1\n    subdir2\n        subsubdir2\n            file2.ext\n```\n\nThe directory `dir` contains two sub-directories subdir1 and subdir2. subdir1 contains a file file1.ext and an empty second-level sub-directory subsubdir1. subdir2 contains a second-level sub-directory subsubdir2 containing a file file2.ext.\n\nWe are interested in finding the longest (number of characters) absolute path to a file within our file system. For example, in the second example above, the longest absolute path is `\"dir/subdir2/subsubdir2/file2.ext\"`, and its length is 32 (not including the double quotes).\n\nGiven a string representing the file system in the above format, return the length of the longest absolute path to a file in the abstracted file system. If there is no file in the system, return 0.\n\nNote:\n* The name of a file contains at least a period and an extension.\n* The name of a directory or sub-directory will not contain a period."
    },
    {
        "title": "Rolling Order Log #16",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/52",
        "companies": [
            "Twitter"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "You run an e-commerce website and want to record the last `N` order ids in a log. Implement a data structure to accomplish this, with the following API:\n\n`record(order_id)`: adds the `order_id` to the log\n`get_last(i)`: gets the `ith` last element from the log. `i` is guaranteed to be smaller than or equal to `N`.\nYou should be as efficient with time and space as possible."
    },
    {
        "title": "Daily Coding Problem: Problem #14",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/13",
        "companies": [
            "Google"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "![Google](https://img.shields.io/badge/Google-4285F4?logo=google&logoColor=fff&style=for-the-badge)\n\nThe area of a circle is defined as \u03c0r^2. Estimate \u03c0 to 3 decimal places using a Monte Carlo method.\n\nHint: The basic equation of a circle is x2 + y2 = r2."
    },
    {
        "title": "Daily Coding Problem: Problem #13",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/48",
        "companies": [
            "Amazon"
        ],
        "difficulty": "Hard",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Given an integer `k` and `a` string `s`, find the length of the longest substring that contains at most `k` distinct characters.\n\nFor example, given `s = \"abcba\"` and `k = 2`, the longest substring with k distinct characters is `\"bcb\"`."
    },
    {
        "title": "Daily Coding Problem: Problem #12",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/47",
        "companies": [
            "Amazon"
        ],
        "difficulty": "Hard",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "There exists a staircase with N steps, and you can climb up either 1 or 2 steps at a time. Given N, write a function that returns the number of unique ways you can climb the staircase. The order of the steps matters.\n\nFor example, if N is 4, then there are 5 unique ways:\n```\n1, 1, 1, 1\n2, 1, 1\n1, 2, 1\n1, 1, 2\n2, 2\n```\nWhat if, instead of being able to climb 1 or 2 steps at a time, you could climb any number from a set of positive integers X? For example, if X = {1, 3, 5}, you could climb 1, 3, or 5 steps at a time."
    },
    {
        "title": "Daily Coding Problem: Problem #11",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/14",
        "companies": [
            "Twitter"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Implement an autocomplete system. That is, given a query string s and a set of all possible query strings, return all strings in the set that have s as a prefix.\n\nFor example, given the query string de and the set of strings [dog, deer, deal], return [deer, deal].\n\nHint: Try preprocessing the dictionary into a more efficient data structure to speed up queries."
    },
    {
        "title": "Daily Coding Problem: Problem #9",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/11",
        "companies": [
            "Airbnb"
        ],
        "difficulty": "Hard",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Given a list of integers, write a function that returns the largest sum of non-adjacent numbers. Numbers can be `0 or negative`.\n\nFor example, `[2, 4, 6, 2, 5]` should `return 13`, since we pick `2, 6, and 5. [5, 1, 1, 5]` should `return 10`, since we pick `5 and 5`.\n\nFollow-up: Can you do this in `O(N)` time and constant space?"
    },
    {
        "title": "Daily Coding Problem: Problem #8",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/10",
        "companies": [
            "Google"
        ],
        "difficulty": "Easy",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "![](https://img.shields.io/badge/Google-4285F4?logo=google&logoColor=fff&style=for-the-badge)\n\nA unival tree (which stands for \"universal value\") is a tree where all nodes under it have the same value.\n\nGiven the root to a binary tree, count the number of unival subtrees.\n\nFor example, the following tree has 5 unival subtrees:\n\n```txt\n   0\n  / \\\n 1   0\n    / \\\n   1   0\n  / \\\n 1   1\n```"
    },
    {
        "title": "Daily Coding Problem: Problem #7",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/9",
        "companies": [
            "Facebook"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Given the mapping `a = 1, b = 2, ... z = 26`, and an encoded message, count the number of ways it can be decoded.\n\nFor example, the message `'111'` would give `3`, since it could be decoded as `'aaa', 'ka', and 'ak'`.\n\nYou can assume that the messages are decodable. For example, `'001'` is not allowed."
    },
    {
        "title": "Daily Coding Problem: Problem #6",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/8",
        "companies": [
            "Google"
        ],
        "difficulty": "Hard",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "An XOR linked list is a more memory efficient doubly linked list. Instead of each node holding next and prev fields, it holds a field named both, which is an XOR of the next node and the previous node. Implement an XOR linked list; it has an `add(element)` which adds the element to the end, and a `get(index)` which returns the node at index.\n\nIf using a language that has no pointers (such as Python), you can assume you have access to `get_pointer` and `dereference_pointer` functions that converts between nodes and memory addresses."
    },
    {
        "title": "Functional Pair Extraction (car & cdr) #5",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/7",
        "companies": [
            "JaneStreet"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "`cons(a, b)` constructs a pair, and `car(pair)` and `cdr(pair)` returns the first and last element of that pair. For example, `car(cons(3, 4))` returns `3`, and `cdr(cons(3, 4))` returns `4`.\n\nGiven this implementation of cons:\n\n```py\ndef cons(a, b):\n    def pair(f):\n        return f(a, b)\n    return pair\n```\n\nImplement `car` and `cdr`."
    },
    {
        "title": "First Missing Positive #4",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/6",
        "companies": [
            "Stripe"
        ],
        "difficulty": "Hard",
        "status": "Solved",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Given an array of integers, find the first missing positive integer in linear time and constant space. In other words, find the lowest positive integer that does not exist in the array. The array can contain duplicates and negative numbers as well.\n\nFor example, the input `[3, 4, -1, 1]` should give `2`. The input `[1, 2, 0]` should give `3`.\n\nYou can modify the input array in-place."
    },
    {
        "title": "Binary Tree Serialization and Deserialization #3",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/5",
        "companies": [
            "Google"
        ],
        "difficulty": "Medium",
        "status": "Solved",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "![Google](https://img.shields.io/badge/Google-4285F4?logo=google&logoColor=fff&style=for-the-badge)\n\nGiven the root to a binary tree, implement `serialize(root)`, which serializes the tree into a string, and `deserialize(s)`, which deserializes the string back into the tree.\n\nFor example, given the following Node class\n```\nclass Node:\n    def __init__(self, val, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n```\nThe following test should pass:\n```\nnode = Node('root', Node('left', Node('left.left')), Node('right'))\nassert deserialize(serialize(node)).left.left.val == 'left.left'\n```"
    },
    {
        "title": "Array Product Except Self #2",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/4",
        "companies": [
            "Uber"
        ],
        "difficulty": "Hard",
        "status": "Solved",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Given an array of integers, return a new array such that each element at index i of the new array is the product of all the numbers in the original array except the one at i.\n\nFor example, if our input was [1, 2, 3, 4, 5], the expected output would be [120, 60, 40, 30, 24]. If our input was [3, 2, 1], the expected output would be [2, 3, 6].\n\nFollow-up: what if you can't use division?"
    },
    {
        "title": "Job Scheduler #10",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/12",
        "companies": [
            "Apple"
        ],
        "difficulty": "Medium",
        "status": "Solved",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Implement a job scheduler which takes in a function `f` and an integer `n`, and calls `f` after `n` milliseconds."
    },
    {
        "title": "Two Sum #1",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/3",
        "companies": [
            "Google"
        ],
        "difficulty": "Easy",
        "status": "Solved",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "![](https://img.shields.io/badge/Google-4285F4?logo=google&logoColor=fff&style=for-the-badge)\n\nGiven a list of numbers and a number k, return whether any two numbers from the list add up to k.\n\nFor example, given `[10, 15, 3, 7]` and `k of 17`, return true since `10 + 7 is 17`."
    },
    {
        "title": "Daily Coding Problem: Problem #15",
        "url": "https://github.com/Razeen-Shaikh/dailyCodingProblem/issues/49",
        "companies": [
            "Facebook"
        ],
        "difficulty": "Medium",
        "status": "InProgress",
        "tags": [],
        "date_added": "2023-02-11",
        "notes": "Given a stream of elements too large to store in memory, pick a random element from the stream with uniform probability."
    }
]